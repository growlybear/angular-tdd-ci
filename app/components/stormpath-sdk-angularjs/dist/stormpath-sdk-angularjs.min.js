/**
 * stormpath-sdk-angularjs
 * Copyright Stormpath, Inc. 2015
 * 
 * @version v0.2.1-dev-2015-03-03
 * @link https://github.com/stormpath/stormpath-sdk-angularjs
 * @license Apache-2.0
 */
"undefined"!=typeof module&&"undefined"!=typeof exports&&module.exports===exports&&(module.exports="ui.router"),function(a,b){"use strict";b.module("stormpath.auth",["stormpath.CONFIG"]).config(["$injector","STORMPATH_CONFIG",function(a,b){var c={$get:["$http","$user","$rootScope",function(a,c,d){function e(){return this}function f(){return c.get()}function g(a){d.$broadcast(b.AUTHENTICATION_SUCCESS_EVENT_NAME,a)}function h(a){d.$broadcast(b.AUTHENTICATION_FAILURE_EVENT_NAME,a)}return e.prototype.authenticate=function(c){var d=a.post(b.AUTHENTICATION_ENDPOINT,c,{withCredentials:!0,params:{grant_type:"password"}}),e=d.then(f).then(g);return d["catch"](h),e},e.prototype.endSession=function(){var c=a.get(b.DESTROY_SESSION_ENDPOINT);return c.then(function(){d.$broadcast(b.SESSION_END_EVENT)},function(a){console.error("logout error",a)}),c},new e}]};a.get("$provide").provider(b.AUTH_SERVICE_NAME,c)}]),b.module("stormpath.CONFIG",[]).constant("STORMPATH_CONFIG",{AUTHENTICATION_ENDPOINT:"/oauth/token",CURRENT_USER_URI:"/api/users/current",USER_COLLECTION_URI:"/api/users",DESTROY_SESSION_ENDPOINT:"/logout",RESEND_EMAIL_VERIFICATION_ENDPOINT:"/api/verificationEmails",EMAIL_VERIFICATION_ENDPOINT:"/api/emailVerificationTokens",PASSWORD_RESET_TOKEN_COLLECTION_ENDPOINT:"/api/passwordResetTokens",GET_USER_EVENT:"$currentUser",SESSION_END_EVENT:"$sessionEnd",UNAUTHORIZED_EVENT:"unauthorized",LOGIN_STATE_NAME:"login",FORBIDDEN_STATE_NAME:"forbidden",AUTHENTICATION_SUCCESS_EVENT_NAME:"$authenticated",AUTHENTICATION_FAILURE_EVENT_NAME:"$authenticationFailure",AUTH_SERVICE_NAME:"$auth",NOT_LOGGED_IN_EVENT:"$notLoggedin",STATE_CHANGE_UNAUTHENTICATED:"$stateChangeUnauthenticated",STATE_CHANGE_UNAUTHORIZED:"$stateChangeUnauthorized"}),b.module("stormpath",["stormpath.CONFIG","stormpath.auth","stormpath.userService"]).provider("$stormpath",[function(){this.$get=["$user","$state","$cookieStore","STORMPATH_CONFIG","$rootScope",function(a,b,c,d,e){function f(){return this}return f.prototype.stateChangeInterceptor=function(){e.$on("$stateChangeStart",function(c,f,g){var h=f.sp||{};if(!h.authenticate&&!h.authorize||a.currentUser){if(h.waitForUser&&null===a.currentUser)c.preventDefault(),a.get()["finally"](function(){b.go(f.name,g)});else if(a.currentUser&&h.authorize)if(1===Object.keys(h.authorize).length&&h.authorize.group){if(!a.currentUser.inGroup(h.authorize.group))return c.preventDefault(),e.$broadcast(d.STATE_CHANGE_UNAUTHORIZED,f,g)}else console.error("Unknown authorize configuration for state",f)}else c.preventDefault(),a.get().then(function(){b.go(f.name,g)},function(){e.$broadcast(d.STATE_CHANGE_UNAUTHENTICATED,f,g)})})},f.prototype.uiRouter=function(a){var c=this;a="object"==typeof a?a:{},this.stateChangeInterceptor(),a.loginState&&(c.unauthenticatedWather=e.$on(d.STATE_CHANGE_UNAUTHENTICATED,function(f,g,h){c.postLogin={toState:g,toParams:h},b.go(a.loginState),a.autoRedirect!==!1&&(c.authWatcher=e.$on(d.AUTHENTICATION_SUCCESS_EVENT_NAME,function(){c.authWatcher(),c.postLogin&&b.go(c.postLogin.toState,c.postLogin.toParams).then(function(){c.postLogin=null})}))})),a.defaultPostLoginState&&(c.defaultRedirectStateWatcher=e.$on(d.AUTHENTICATION_SUCCESS_EVENT_NAME,function(){c.postLogin||b.go(a.defaultPostLoginState)}))},new f}]}]).run(["$rootScope","$user",function(a,b){a.user=b.currentUser||null,b.get()["finally"](function(){a.user=b.currentUser}),a.$on("$currentUser",function(b,c){a.user=c}),a.$on("$sessionEnd",function(){a.user=null})}]).controller("SpRegistrationFormCtrl",["$scope","$user","$auth","$state",function(a,b,c,d){a.formModel={firstName:"",lastName:"",email:"",password:""},a.created=!1,a.enabled=!1,a.creating=!1,a.authenticating=!1,a.submit=function(){a.creating=!0,a.error=null,b.create(a.formModel).then(function(b){a.created=!0,a.enabled=b,b&&a.autoLogin?(a.authenticating=!0,c.authenticate({username:a.formModel.email,password:a.formModel.password}).then(function(){a.postLoginState&&d.go(a.postLoginState)})["catch"](function(b){a.error=b.data.errorMessage})["finally"](function(){a.authenticating=!1,a.creating=!1})):a.creating=!1})["catch"](function(b){a.creating=!1,a.error=b.data.errorMessage})}}]).controller("SpLoginFormCtrl",["$scope","$auth",function(a,b){a.formModel={username:"",password:""},a.posting=!1,a.submit=function(){a.posting=!0,a.error=null,b.authenticate(a.formModel)["catch"](function(b){a.posting=!1,a.error=b.data.errorMessage})}}]).controller("SpEmailVerificationCtrl",["$scope","$stateParams","$user",function(a,b,c){a.showVerificationError=!1,a.verifying=!1,a.reVerificationSent=!1,a.needsReVerification=!1,a.resendFailed=!1,a.formModel={username:""},b.sptoken?(a.verifying=!0,c.verify({sptoken:b.sptoken}).then(function(){a.verified=!0})["catch"](function(){a.needsReVerification=!0,a.showVerificationError=!0})["finally"](function(){a.verifying=!1})):(a.needsReVerification=!0,a.showVerificationError=!0),a.submit=function(){a.posting=!0,a.resendFailed=!1,a.showVerificationError=!1,c.resendVerificationEmail({login:a.formModel.username}).then(function(){a.reVerificationSent=!0})["catch"](function(){a.resendFailed=!0})["finally"](function(){a.posting=!1})}}]).controller("SpPasswordResetRequestCtrl",["$scope","$stateParams","$user",function(a,b,c){a.sent=!1,a.posting=!1,a.formModel={username:""},a.requestFailed=!1,a.submit=function(){a.posting=!0,a.requestFailed=!1,c.passwordResetRequest({username:a.formModel.username}).then(function(){a.sent=!0})["catch"](function(){a.requestFailed=!0})["finally"](function(){a.posting=!1})}}]).controller("SpPasswordResetCtrl",["$scope","$stateParams","$user",function(a,b,c){var d=b.sptoken;a.showVerificationError=!1,a.verifying=!1,a.verified=!1,a.posting=!1,a.reset=!1,a.error=null,a.resendFailed=!1,a.formModel={password:"",confirmPassword:""},d?(a.verifying=!0,c.verifyPasswordResetToken(d).then(function(){a.verified=!0})["catch"](function(){a.showVerificationError=!0})["finally"](function(){a.verifying=!1})):a.showVerificationError=!0,a.submit=function(){return a.formModel.password!==a.formModel.confirmPassword?void(a.error="Passwords do not match"):(a.posting=!0,a.error=null,a.showVerificationError=!1,void c.resetPassword(d,{password:a.formModel.password}).then(function(){a.reset=!0})["catch"](function(b){a.error=b.data.errorMessage})["finally"](function(){a.posting=!1}))}}]).directive("spRegistrationForm",function(){return{templateUrl:function(a,b){return b.templateUrl||"spRegistrationForm.tpl.html"},controller:"SpRegistrationFormCtrl",link:function(a,b,c){a.autoLogin="true"===c.autoLogin,a.postLoginState=c.postLoginState||""}}}).directive("spPasswordResetRequestForm",function(){return{templateUrl:function(a,b){return b.templateUrl||"spPasswordResetRequestForm.tpl.html"},controller:"SpPasswordResetRequestCtrl"}}).directive("spPasswordResetForm",function(){return{templateUrl:function(a,b){return b.templateUrl||"spPasswordResetForm.tpl.html"},controller:"SpPasswordResetCtrl"}}).directive("spLoginForm",function(){return{templateUrl:function(a,b){return b.templateUrl||"spLoginForm.tpl.html"},controller:"SpLoginFormCtrl"}}).directive("spEmailVerification",function(){return{templateUrl:function(a,b){return b.templateUrl||"spEmailVerification.tpl.html"},controller:"SpEmailVerificationCtrl"}}).directive("ifUser",["$user","$rootScope",function(a,b){return{link:function(a,c){b.$watch("user",function(a){a&&a.href?c.show():c.hide()})}}}]).directive("ifNotUser",["$user","$rootScope",function(a,b){return{link:function(a,c){b.$watch("user",function(a){a&&a.href?c.hide():c.show()})}}}]).directive("whileResolvingUser",["$user",function(a){return{link:function(b,c){a.get()["finally"](function(){console.log("currentUser",a.currentUser),"object"==typeof a.currentUser||a.currentUser===!1?c.hide():c.show()})}}}]).directive("logout",["$auth",function(a){return{link:function(b,c){c.on("click",function(){a.endSession()})}}}]),b.module("stormpath.userService",["stormpath.CONFIG"]).provider("$user",[function(){function a(a){var b=this;Object.keys(a).map(function(c){b[c]=a[c]})}a.prototype.inGroup=function(a){return this.groups.items.filter(function(b){return b.name===a}).length>0},this.$get=["$q","$http","STORMPATH_CONFIG","$rootScope",function(b,c,d,e){function f(){return this.cachedUserOp=null,this.currentUser=null,this}function g(a){e.$broadcast(d.GET_USER_EVENT,a)}function h(){e.$broadcast(d.NOT_LOGGED_IN_EVENT)}f.prototype.create=function(a){var e=b.defer(),f={surname:a.lastName,givenName:a.firstName,email:a.email,password:a.password};return c.post(d.USER_COLLECTION_URI,f).then(function(a){e.resolve(201===a.status)},e.reject),e.promise},f.prototype.get=function(){var e=b.defer(),f=this;return f.cachedUserOp?f.cachedUserOp.promise:f.currentUser?(e.resolve(f.currentUser),e.promise):(f.cachedUserOp=e,c.get(d.CURRENT_USER_URI).then(function(b){f.cachedUserOp=null,f.currentUser=new a(b.data),g(f.currentUser),e.resolve(f.currentUser)},function(a){f.currentUser=!1,401===a.status&&h(),f.cachedUserOp=null,e.reject(a)}),e.promise)},f.prototype.resendVerificationEmail=function(a){return c.post(d.RESEND_EMAIL_VERIFICATION_ENDPOINT,a)},f.prototype.verify=function(a){return c.post(d.EMAIL_VERIFICATION_ENDPOINT,a)},f.prototype.verifyPasswordResetToken=function(a){return c.get(d.PASSWORD_RESET_TOKEN_COLLECTION_ENDPOINT+"/"+a)},f.prototype.passwordResetRequest=function(a){return c.post(d.PASSWORD_RESET_TOKEN_COLLECTION_ENDPOINT,a)},f.prototype.resetPassword=function(a,b){return c.post(d.PASSWORD_RESET_TOKEN_COLLECTION_ENDPOINT+"/"+a,b)};var i=new f;return e.$on(d.SESSION_END_EVENT,function(){i.currentUser=null}),i}]}])}(window,window.angular);